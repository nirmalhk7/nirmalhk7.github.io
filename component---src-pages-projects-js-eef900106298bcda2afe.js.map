{"version":3,"sources":["webpack:///./src/pages/projects.js"],"names":["Projects","props","handleClick","event","preventDefault","persist","state","openIndex","parseInt","target","id","split","setState","hasClicked","bind","render","location","this","title","className","href","icon","faWrench","data","allFile","group","map","e1","i1","key","fieldValue","edges","e2","i2","onClick","node","childMarkdownRemark","frontmatter","style","display","dangerouslySetInnerHTML","__html","html","React","Component"],"mappings":"sMAOMA,E,YACJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAQFC,YAAc,SAACC,GACbA,EAAMC,iBACND,EAAME,UACF,EAAKC,MAAMC,YAAcC,SAASL,EAAMM,OAAOC,GAAGC,MAAM,KAAK,IAC/D,EAAKC,SAAS,CACZC,YAAY,EACZN,WAAY,IAGd,EAAKK,SAAS,CACZC,YAAY,EACZN,UAAWC,SAASL,EAAMM,OAAOC,GAAGC,MAAM,KAAK,OAlBnD,EAAKL,MAAQ,CACXC,WAAY,EACZM,YAAY,GAEd,EAAKX,YAAc,EAAKA,YAAYY,KAAjB,gBANF,E,oCAyBnBC,OAAA,WAAU,IAAD,OACP,OACE,oCACE,kBAAC,IAAD,CAAQC,SAAUC,KAAKhB,MAAMe,UAC3B,kBAAC,IAAD,CAAKE,MAAM,aACX,6BAASC,UAAU,mDAAmDT,GAAG,mBACvE,yBAAKS,UAAU,kCACb,6BAASA,UAAU,YACjB,wBAAIA,UAAU,sBACZ,uBAAGC,KAAK,KAAKF,MAAM,YAAnB,aAIF,yBAAKC,UAAU,qBACb,yBAAKA,UAAU,oBAAf,yCAEF,uBAAGA,UAAU,UAAb,+IAE0C,kBAAC,IAAD,CAAiBE,KAAMC,IAAUH,UAAU,aAM3F,6BAASA,UAAU,uCACjB,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,IACb,yBAAKA,UAAU,sCACb,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,OACZF,KAAKhB,MAAMsB,KAAKC,QAAQC,MAAMC,KAAI,SAACC,EAAIC,GAAL,OACjC,yBAAKT,UAAU,qBAAqBU,IAAKD,GACvC,wBAAIlB,GAAIiB,EAAGG,YAAaH,EAAGG,YAC1BH,EAAGI,MAAML,KAAI,SAACM,EAAIC,GAAL,OACZ,yBACEvB,GAAI,aAAekB,EAAKK,EACxBJ,IAAKD,EAAK,IAAMK,EAChBC,QAAS,EAAKhC,YACdiB,UAAS,sCACP,EAAKb,MAAMO,YAAmB,GAALe,EAAUK,IAAO,EAAK3B,MAAMC,UAAY,SAAW,KAG9E,yBAAKG,GAAI,mBAAqBkB,EAAKK,EAAId,UAAU,wCAC9Ca,EAAGG,KAAKC,oBAAoBC,YAAYnB,OAE3C,yBACEC,UAAU,mCACVmB,MAAO,CACLC,QACE,EAAKjC,MAAMO,YAAc,EAAKP,MAAMC,YAAmB,GAALqB,EAAUK,EAAK,QAAU,SAG/E,yBACEd,UAAU,2BACVqB,wBAAyB,CACvBC,OAAQT,EAAGG,KAAKC,oBAAoBM,0B,GAjFjDC,IAAMC,WA0Hd5C","file":"component---src-pages-projects-js-eef900106298bcda2afe.js","sourcesContent":["import React from \"react\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { graphql } from \"gatsby\";\nimport { faWrench } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass Projects extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      openIndex: -1,\n      hasClicked: false,\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick = (event) => {\n    event.preventDefault();\n    event.persist();\n    if (this.state.openIndex === parseInt(event.target.id.split(\"-\")[1])) {\n      this.setState({\n        hasClicked: false,\n        openIndex: -1,\n      });\n    } else {\n      this.setState({\n        hasClicked: true,\n        openIndex: parseInt(event.target.id.split(\"-\")[1]),\n      });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <Layout location={this.props.location}>\n          <SEO title=\"Projects\" />\n          <section className=\"page-header page-hero parallax bootstrap-wrapper\" id=\"projects-header\">\n            <div className=\"container page-header__content\">\n              <article className=\"col-full\">\n                <h1 className=\"page-header__title\">\n                  <a href=\"#0\" title=\"Projects\">\n                    Projects\n                  </a>\n                </h1>\n                <div className=\"page-header__info\">\n                  <div className=\"page-header__cat\">Projects Catalogue of Nirmal Khedkar</div>\n                </div>\n                <p className=\"narrow\">\n                  I'm a fullstack and hybrid product developer, currently understanding how ML models are deployed on\n                  cloud platforms. I love building stuff! <FontAwesomeIcon icon={faWrench} className=\"ml-2\" />\n                </p>\n              </article>\n            </div>\n          </section>\n\n          <section className=\"blog-content-wrap bootstrap-wrapper\">\n            <div className=\"container blog-content\">\n              <div className=\"\">\n                <div className=\"blog-list block-1-2 block-tab-full\">\n                  <div className=\"accordion js-accordion\">\n                    <div className=\"row\">\n                      {this.props.data.allFile.group.map((e1, i1) => (\n                        <div className=\"col-lg-6 col-md-12\" key={i1}>\n                          <h6 id={e1.fieldValue}>{e1.fieldValue}</h6>\n                          {e1.edges.map((e2, i2) => (\n                            <div\n                              id={\"accordion-\" + i1 + i2}\n                              key={i1 + \"-\" + i2}\n                              onClick={this.handleClick}\n                              className={`accordion__item js-accordion-item ${\n                                this.state.hasClicked && i1 * 10 + i2 === this.state.openIndex ? \"active\" : \"\"\n                              }`}\n                            >\n                              <div id={\"accordionheader-\" + i1 + i2} className=\"accordion-header js-accordion-header\">\n                                {e2.node.childMarkdownRemark.frontmatter.title}\n                              </div>\n                              <div\n                                className=\"accordion-body js-accordion-body\"\n                                style={{\n                                  display:\n                                    this.state.hasClicked && this.state.openIndex === i1 * 10 + i2 ? \"block\" : \"none\",\n                                }}\n                              >\n                                <div\n                                  className=\"accordion-body__contents\"\n                                  dangerouslySetInnerHTML={{\n                                    __html: e2.node.childMarkdownRemark.html,\n                                  }}\n                                />\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n        </Layout>\n      </>\n    );\n  }\n}\n\nexport const postQuery = graphql`\n  query projects {\n    allFile(filter: { sourceInstanceName: { eq: \"projects\" } }, sort: { order: DESC, fields: birthTime }) {\n      group(field: childMarkdownRemark___frontmatter___tags) {\n        edges {\n          node {\n            childMarkdownRemark {\n              frontmatter {\n                title\n                tags\n              }\n              html\n            }\n          }\n        }\n        fieldValue\n      }\n    }\n  }\n`;\n\nexport default Projects;\n"],"sourceRoot":""}