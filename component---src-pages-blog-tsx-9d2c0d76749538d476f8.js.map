{"version":3,"file":"component---src-pages-blog-tsx-9d2c0d76749538d476f8.js","mappings":"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","sources":["webpack://nirmalhk7-personal-website/./src/elements/jumbotron.tsx","webpack://nirmalhk7-personal-website/./src/elements/latestBlogSection.tsx","webpack://nirmalhk7-personal-website/./src/elements/blogListSection.tsx","webpack://nirmalhk7-personal-website/./src/pages/blog.tsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport SocialMediaIcons from \"./social/socialSection\";\n\nconst Jumbotron = {\n  mini: () => <div />,\n  Max: ({\n    bgImg,\n    orangeText,\n    HeadingTextComponent,\n    buttonDetails,\n    showScrollDown,\n  }) => (\n    <section\n      className={`s-home   bg-fixed bg-center bg-no-repeat ${bgImg} bg-cover relative z-10`}\n    >\n      <div className=\"z-0 bg-black h-full left-0 opacity-40 absolute top-0 w-full\" />\n      <div className=\"home-content  pt-40 z-10\">\n        <div className=\"tablet:container mx-auto home-content__main\">\n          <h3 className=\"ital-hover\">{orangeText}</h3>\n          {HeadingTextComponent}\n          <div className=\"static text-left gap-4 right-0 bottom-8  text-button font-blocky uppercase font-bold\">\n            {buttonDetails &&\n              buttonDetails.map((item) => (\n                <Link\n                  className=\"inline-block mr-4 border-4 no-underline px-5 text-white border-white hover:bg-white hover:text-black\"\n                  key={item[0]}\n                  to={item[1]}\n                >\n                  {item[0]}\n                </Link>\n              ))}\n          </div>\n          {showScrollDown ? (\n            <div className=\"home-content__scroll\">\n              <Link\n                className=\"scroll-link no-underline hover:text-white\"\n                to=\"#about\"\n              >\n                <span>Scroll Down</span>\n              </Link>\n            </div>\n          ) : null}\n        </div>\n      </div>\n      <SocialMediaIcons />\n    </section>\n  ),\n};\n\nexport default Jumbotron;\n","import { Link } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport React from \"react\";\n\nconst LatestBlogSection = ({ relativeDirectory, frontmatter }) => {\n  return (\n    <section\n      className=\"bg-gradient-to-r from-accent to-accentLight\"\n      id=\"blog-first\"\n      style={{\n        textDecoration: \"none\",\n        paddingTop: \"2em\",\n        paddingBottom: \"2em\",\n      }}\n    >\n      <div className=\"container mx-auto\">\n        <div className=\"grid laptop:grid-cols-2 tablet:grid-cols-2 mobile-l:grid-cols-1 py-10\">\n          <div>\n            <GatsbyImage\n              alt=\"Latest Blog\"\n              image={getImage(frontmatter.img)}\n              style={{ width: \"70%\", height: \"auto\" }}\n            />\n          </div>\n          <div className=\"laptop:text-right tablet:text-right relative\">\n            <div className=\"absolute bottom-10\">\n              <h1\n                className=\"font-bold leading-snug mt-0 font-heading text-white\"\n                style={{ textDecoration: \"none\" }}\n              >\n                {frontmatter.title}\n              </h1>\n              <div\n                className=\"entry-content text-white no-underline mb-10\"\n                style={{ textDecoration: \"none\" }}\n              >\n                <p>{frontmatter.description}</p>\n              </div>\n              <Link\n                className=\"font-blocky uppercase font-bold mr-4 border-4 no-underline p-5 text-white border-white hover:bg-white hover:text-black\"\n                to={`/blog/${relativeDirectory}`}\n              >\n                Read More\n              </Link>\n            </div>\n          </div>\n        </div>\n        {/* </Link> */}\n      </div>\n    </section>\n  );\n};\n\nexport default LatestBlogSection;\n","import { Link } from \"gatsby\";\nimport { GatsbyImage, getImage, ImageDataLike } from \"gatsby-plugin-image\";\nimport React from \"react\";\nimport Utils from \"./utils\";\n\ntype blogDetails = {\n  relativeDirectory: string,\n  childMarkdownRemark: {\n    frontmatter: {\n      description: string,\n      title: string,\n      img: ImageDataLike,\n      category: string\n    }\n  }\n}\n\ntype MasonPanelProps = {\n  sitename: string,\n  blogItems: blogDetails[]\n}\n\nconst BlogListSection = ({ blogItems, sitename }: MasonPanelProps) => {\n  return (\n    <section className=\"bg-gray\">\n      <div>\n        <div className=\" m-auto\" style={{ maxWidth: \"1500px\" }}>\n          <div\n            className=\"section_intro has-bottom-sep\"\n            style={{ paddingTop: \"5em\" }}\n          >\n            <div className=\"text-center\">\n              <h3>{sitename}</h3>\n              <h1>All Posts</h1>\n            </div>\n          </div>\n          <div>\n            <div className=\"columns-4\">\n              {blogItems.map((element, index) => {\n                return (\n                  <div className=\"break-inside-avoid-column\" key={index}>\n                    <div className=\" overflow-hidden relative hover:opacity-100 hover:visible\">\n                      <div className=\" before:bg-black before:z-10\">\n                        <Link\n                          title={Utils.getFrontmatter(element).description}\n                          to={`/blog/${element.relativeDirectory}`}\n                        >\n                          <GatsbyImage\n                            alt={Utils.getFrontmatter(element).title}\n                            image={getImage(Utils.getFrontmatter(element).img)}\n                            layout=\"fill\"\n                          />\n                        </Link>\n                      </div>\n                      <div className=\"pt-0 pb-0 pl-12 pr-12 z-10 bottom-12\tleft-0 absolute\">\n                        <h3 className=\"text-white text-base font-semibold m-0 uppercase font-blocky\">\n                          {Utils.getFrontmatter(element).title}\n                        </h3>\n                        <strong className=\"text-accent\">\n                          {Utils.getFrontmatter(element).category}\n                        </strong>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\nexport default BlogListSection;\n","import React from \"react\";\n\nimport Layout from \"../layouts/mainLayout\";\nimport SearchEnggOp from \"../elements/seoUtil\";\nimport { graphql, Link, PageProps } from \"gatsby\";\nimport LatestBlogItem from \"../elements/latestBlogSection\";\nimport MasonPanel from \"../elements/blogListSection\";\nimport Jumbotron from \"../elements/jumbotron\";\nimport Utils  from \"../elements/utils\";\n\ntype BlogPageTypes= {\n  site: {\n    siteMetadata: {\n      blogName: string\n    }\n  }\n  blogs: {\n    nodes: {\n      relativeDirectory: string,\n      childMarkdownRemark: {\n        frontmatter: any\n      }\n    }[]\n  }\n}\n\nconst Blog = ({ location, data }: PageProps<BlogPageTypes>) => {\n  if (!data) return null;\n  return (\n    <Layout location={location}>\n      <SearchEnggOp title={data.site.siteMetadata.blogName} />\n      <Jumbotron.Max\n        HeadingTextComponent={\n          <h1 className=\"page-header__title\">\n            <Link title=\"\" to=\"/blog\">\n              {data.site.siteMetadata.blogName}\n            </Link>\n          </h1>\n        }\n        bgImg=\"bg-blogWallpaper\"\n        buttonDetails={[[\"Explore\", \"#blog-first\"]]}\n        orangeText=\"Official Blog of Nirmal Khedkar\"\n      />\n      <LatestBlogItem\n        frontmatter={Utils.getFrontmatter(data.blogs.nodes[0])}\n        relativeDirectory={data.blogs.nodes[0].relativeDirectory}\n      />\n      <MasonPanel\n        blogItems={data.blogs.nodes}\n        sitename={data.site.siteMetadata.blogName}\n      />\n    </Layout>\n  );\n};\nexport const potQuery = graphql`\n  query xyz {\n    blogs: allFile(\n      filter: { sourceInstanceName: { eq: \"blog\" }, ext: { eq: \".md\" } }\n      sort: { fields: childrenMarkdownRemark___frontmatter___date, order: DESC }\n    ) {\n      nodes {\n        relativeDirectory\n        childMarkdownRemark {\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD,YYYY\")\n            category\n            description\n            img {\n              childImageSharp {\n                gatsbyImageData(width: 400, placeholder: BLURRED)\n              }\n            }\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        blogName\n      }\n    }\n  }\n`;\n\nexport default Blog;\n"],"names":["Jumbotron","mini","React","Max","bgImg","orangeText","HeadingTextComponent","buttonDetails","showScrollDown","className","map","item","Link","key","to","SocialMediaIcons","relativeDirectory","frontmatter","id","style","textDecoration","paddingTop","paddingBottom","GatsbyImage","alt","image","getImage","img","width","height","title","description","blogItems","sitename","maxWidth","element","index","Utils","layout","category","location","data","Layout","SearchEnggOp","site","siteMetadata","blogName","LatestBlogItem","blogs","nodes","MasonPanel"],"sourceRoot":""}